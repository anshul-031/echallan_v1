generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique
  password  String
  name      String?
  role      String    @default("user")
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  challans  Challan[]
  vehicles  Vehicle[]
  preference Preference?
  @@map("users")
}

model Vehicle {
  id             Int       @id @default(autoincrement())
  vrn            String    @unique
  roadTax        String
  fitness        String
  insurance      String
  pollution      String
  statePermit    String
  nationalPermit String
  lastUpdated    String
  status         String
  ownerId        String?
  registeredAt   String
  documents      Int
  createdAt      DateTime  @default(now()) @map("created_at")
  updatedAt      DateTime  @updatedAt @map("updated_at")
  challans       Challan[]
  owner          User?     @relation(fields: [ownerId], references: [id])

  @@map("vehicles")
}

model Challan {
  id                    String   @id @default(cuid())
  rc_no                 String
  user_id               String
  vehicle_id            Int
  challan_no            String   @unique
  challan_status        String
  sent_to_reg_court     Boolean  @default(false)
  remark                String?
  sent_to_virtual_court Boolean  @default(false)
  amount_of_fine        Decimal  @db.Decimal(10, 2)
  state_code            String
  fine_imposed          Decimal  @db.Decimal(10, 2)
  challan_date_time     DateTime
  receipt_no            String?
  last_update           DateTime @default(now()) @updatedAt
  created_at            DateTime @default(now())
  user                  User     @relation(fields: [user_id], references: [id])
  vehicle               Vehicle  @relation(fields: [vehicle_id], references: [id])

  @@index([rc_no])
  @@index([user_id])
  @@index([challan_no])
  @@index([vehicle_id])
}

model Preference {
  id                       String   @id @default(uuid())
  userId                  String   @unique
  roadTaxVisibility       Boolean  @default(true)
  fitnessVisibility       Boolean  @default(true)
  insuranceVisibility     Boolean  @default(true)
  pollutionVisibility     Boolean  @default(true)
  statePermitVisibility   Boolean  @default(true)
  nationalPermitVisibility Boolean @default(true)
  createdAt               DateTime @default(now()) @map("created_at")
  updatedAt               DateTime @updatedAt @map("updated_at")
  user                    User     @relation(fields: [userId], references: [id])

  @@map("preferences")
}